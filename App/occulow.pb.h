/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Nov 13 10:46:21 2017. */

#ifndef PB_OCCULOW_PB_H_INCLUDED
#define PB_OCCULOW_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CountMessage {
    uint32_t count_in;
    uint32_t count_out;
    uint32_t batteryVoltage;
    uint32_t batteryLevel;
/* @@protoc_insertion_point(struct:CountMessage) */
} CountMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define CountMessage_init_default                {0, 0, 0, 0}
#define CountMessage_init_zero                   {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CountMessage_count_in_tag                1
#define CountMessage_count_out_tag               2
#define CountMessage_batteryVoltage_tag          3
#define CountMessage_batteryLevel_tag            4

/* Struct field encoding specification for nanopb */
extern const pb_field_t CountMessage_fields[5];

/* Maximum encoded size of messages (where known) */
#define CountMessage_size                        24

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define OCCULOW_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
